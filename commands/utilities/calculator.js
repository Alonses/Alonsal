const { SlashCommandBuilder } = require('discord.js')

module.exports = {
    data: new SlashCommandBuilder()
        .setName("calculator")
        .setNameLocalizations({
            "de": 'taschenrechner',
            "es-ES": 'calculadora',
            "fr": 'calculatrice',
            "it": 'calcolatrice',
            "pt-BR": 'calculadora',
            "ru": '–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä'
        })
        .setDescription("‚å†üí°‚å° Find math problem results")
        .addSubcommand(subcommand =>
            subcommand
                .setName("equation")
                .setNameLocalizations({
                    "de": 'gleichung',
                    "es-ES": 'ecuacion',
                    "fr": 'equation',
                    "it": 'equazione',
                    "pt-BR": 'equacao',
                    "ru": '—É—Ä–∞–≤–Ω–µ–Ω–∏–µ'
                })
                .setDescription("‚å†üí°‚å° Find math problem results")
                .setDescriptionLocalizations({
                    "de": '‚å†üí°‚å° Finden Sie Ergebnisse von mathematischen Problemen',
                    "es-ES": '‚å†üí°‚å° Encuentra los resultados de los problemas matem√°ticos',
                    "fr": '‚å†üí°‚å° Trouver les r√©sultats des probl√®mes math√©matiques',
                    "it": '‚å†üí°‚å° Trova i risultati dei problemi di matematica',
                    "pt-BR": '‚å†üí°‚å° Ache resultados de problemas matem√°ticos',
                    "ru": '‚å†üí°‚å° –ù–∞–π–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á'
                })
                .addStringOption(option =>
                    option.setName("equation")
                        .setNameLocalizations({
                            "de": 'gleichung',
                            "es-ES": 'ecuacion',
                            "fr": 'equation',
                            "it": 'equazione',
                            "pt-BR": 'equacao',
                            "ru": '—É—Ä–∞–≤–Ω–µ–Ω–∏–µ'
                        })
                        .setDescription("Write something!")
                        .setDescriptionLocalizations({
                            "de": 'Schreibe etwas!',
                            "es-ES": '¬°Escribe algo!',
                            "fr": '√âcris quelque chose!',
                            "it": 'Scrivi qualcosa!',
                            "pt-BR": 'Escreva algo!',
                            "ru": '–ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å!'
                        })
                        .setRequired(true)))
        .addSubcommand(subcommand =>
            subcommand
                .setName("circle")
                .setNameLocalizations({
                    "de": 'kreis',
                    "es-ES": 'circulo',
                    "fr": 'cercle',
                    "it": 'cerchio',
                    "pt-BR": 'circulo',
                    "ru": '–∫—Ä—É–≥'
                })
                .setDescription("‚å†üí°‚å° Discover values of circular objects")
                .setDescriptionLocalizations({
                    "de": '‚å†üí°‚å° Entdecken Sie die Werte kreisf√∂rmiger Objekte',
                    "es-ES": '‚å†üí°‚å° Descubre valores de objetos circulares',
                    "fr": '‚å†üí°‚å° D√©couvrez les valeurs des objets circulaires',
                    "it": '‚å†üí°‚å° Scopri i valori degli oggetti circolari',
                    "pt-BR": '‚å†üí°‚å° Descubra os valores dos objetos circulares',
                    "ru": '‚å†üí°‚å° –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –∑–Ω–∞—á–µ–Ω–∏—è –∫—Ä—É–≥–ª—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤'
                })
                .addStringOption(option =>
                    option.setName("input")
                        .setNameLocalizations({
                            "de": 'typ',
                            "es-ES": 'entrada',
                            "fr": 'entree',
                            "it": 'entrata',
                            "pt-BR": 'entrada',
                            "ru": '–≤—Ö–æ–¥'
                        })
                        .setDescription("The input type")
                        .setDescriptionLocalizations({
                            "de": 'Die Art Ihrer Eingabe',
                            "es-ES": 'El tipo de entrada',
                            "fr": 'Le type d\'entr√©e',
                            "it": 'Il tipo di ingresso',
                            "pt-BR": 'O tipo da sua entrada',
                            "ru": '—Ç–∏–ø –≤–≤–æ–¥–∞'
                        })
                        .addChoices(
                            { name: 'üïõ Ray', value: '0' },
                            { name: 'üö´ Diameter', value: '1' },
                            { name: '‚≠ï Perimeter', value: '2' },
                            { name: '‚ö™ Area', value: '3' }
                        )
                        .setRequired(true))
                .addNumberOption(option =>
                    option.setName("value")
                        .setNameLocalizations({
                            "de": 'wert',
                            "es-ES": 'valor',
                            "fr": 'valeur',
                            "it": 'valore',
                            "pt-BR": 'valor',
                            "ru": '—Ü–µ–Ω–∏—Ç—å'
                        })
                        .setDescription("The entry value")
                        .setDescriptionLocalizations({
                            "de": 'der Eingabewert',
                            "es-ES": 'El valor de entrada',
                            "fr": 'La valeur d\'entr√©e',
                            "it": 'Il valore di entrata',
                            "pt-BR": 'O valor de entrada',
                            "ru": '–∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ö–æ–¥–∞'
                        })
                        .setMinValue(0)
                        .setRequired(true))),
    async execute({ client, user, interaction }) {

        // Solicitando a fun√ß√£o e executando
        require(`./subcommands/calculator_${interaction.options.getSubcommand()}`)({ client, user, interaction })
    }
}