const { SlashCommandBuilder } = require('discord.js')

const { emojis } = require('../../arquivos/json/text/emojis.json')

module.exports = {
    data: new SlashCommandBuilder()
        .setName("setup")
        .setDescription("‚å†üë§‚å° Control bot functions and preferences")
        .addSubcommand(subcommand =>
            subcommand
                .setName("notifications")
                .setNameLocalizations({
                    "pt-BR": 'notificacoes',
                    "es-ES": 'notificaciones',
                    "fr": 'avis',
                    "it": 'notifiche',
                    "ru": 'y–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
                })
                .setDescription("‚å†üë§‚å° Disables or enables bot DM notifications")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üë§‚å° Desabilitar ou habilitar as notifica√ß√µes do bot via DM',
                    "es-ES": '‚å†üë§‚å° Deshabilita o habilita las notificaciones de DM de bot',
                    "fr": '‚å†üë§‚å° D√©sactive ou active les notifications DM du bot',
                    "it": '‚å†üë§‚å° Disabilita o abilita le notifiche DM dei bot',
                    "ru": '‚å†üë§‚å° –û—Ç–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±–æ—Ç–æ–≤ –≤ DM'
                }))
        .addSubcommand(subcommand =>
            subcommand
                .setName("ghostmode")
                .setNameLocalizations({
                    "pt-BR": 'fantasma',
                    "es-ES": 'fantasma',
                    "fr": 'fantome',
                    "it": 'fantasma',
                    "ru": '–ø—Ä–∏–∑—Ä–∞–∫'
                })
                .setDescription("‚å†üë§‚å° All commands you use will be shown just for you")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üë§‚å° Todos os comandos que voc√™ usar ser√£o mostrados apenas para voc√™',
                    "es-ES": '‚å†üë§‚å° Todos los comandos que use se mostrar√°n solo para usted',
                    "fr": '‚å†üë§‚å° Toutes les commandes que vous utilisez seront affich√©es juste pour vous',
                    "it": '‚å†üë§‚å° Tutti i comandi che usi verranno mostrati solo per te',
                    "ru": '‚å†üë§‚å° –í—Å–µ –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ, –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞—Å'
                }))
        .addSubcommand(subcommand =>
            subcommand
                .setName("ranking")
                .setDescription("‚å†üë§‚å° Disable or enable your XP gain")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üë§‚å° Desabilitar ou habilitar seu ganho de XP',
                    "es-ES": '‚å†üë§‚å° Deshabilite o habilite su ganancia de XP',
                    "fr": '‚å†üë§‚å° D√©sactiver ou activer votre gain d\'XP',
                    "it": '‚å†üë§‚å° Disabilita o abilita il tuo guadagno XP',
                    "ru": '‚å†üë§‚å° –û—Ç–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤–∫–ª—é—á–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–ø—ã—Ç–∞'
                }))
        .addSubcommand(subcommand =>
            subcommand
                .setName("weather")
                .setNameLocalizations({
                    "pt-BR": 'tempo',
                    "es-ES": 'tiempo',
                    "fr": 'climat',
                    "it": 'clima',
                    "ru": '–ø–æ–≥–æ–¥–∞'
                })
                .setDescription("‚å†üë§‚å° Set the return type for weather requests")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üë§‚å° Defina o tipo de retorno para requisi√ß√µes de clima',
                    "es-ES": '‚å†üë§‚å° Establecer el tipo de retorno para las solicitudes meteorol√≥gicas',
                    "fr": '‚å†üë§‚å° D√©finir le type de retour pour les requ√™tes m√©t√©o',
                    "it": '‚å†üë§‚å° Imposta il tipo di ritorno per le richieste meteo',
                    "ru": '‚å†üë§‚å° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∏–ø –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –æ –ø–æ–≥–æ–¥–µ'
                }))
        .addSubcommand(subcommand =>
            subcommand
                .setName("tasks")
                .setNameLocalizations({
                    "pt-BR": 'tarefas',
                    "es-ES": 'tareas',
                    "fr": 'taches',
                    "it": 'appunti',
                    "ru": '–∑–∞–¥–∞–Ω–∏—è'
                })
                .setDescription("‚å†üë§‚å° Define whether tasks will be accessible only on servers or globally")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üë§‚å° Defina se tarefas ser√£o acess√≠veis apenas em servidores ou globalmente',
                    "es-ES": '‚å†üë§‚å° Establecer si las tareas estar√°n disponibles solo en servidores o globalmente',
                    "fr": '‚å†üë§‚å° D√©finissez si les t√¢ches seront disponibles uniquement sur les serveurs ou globalement',
                    "it": '‚å†üë§‚å° Imposta se le attivit√† saranno disponibili solo sui server o a livello globale',
                    "ru": '‚å†üë§‚å° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ, –±—É–¥—É—Ç –ª–∏ –∑–∞–¥–∞—á–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö –∏–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ'
                })),
    async execute(client, user, interaction) {

        if (interaction.options.getSubcommand() === "notifications") {

            // Ativa ou desativa o modo fantasma e salva
            if (typeof user.conf.notify !== "undefined")
                user.conf.notify = !user.conf.notify
            else
                user.conf.notify = false

            if (user.conf.notify)
                interaction.reply({ content: client.tls.phrase(user, "mode.notify.ativo", client.emoji(emojis.notify)), ephemeral: true })
            else
                interaction.reply({ content: client.tls.phrase(user, "mode.notify.desativo", client.emoji(emojis.pare_agr)), ephemeral: true })

        } else if (interaction.options.getSubcommand() === "ghostmode") {

            // Ativa ou desativa o modo fantasma e salva
            if (typeof user.conf.ghost_mode !== "undefined")
                user.conf.ghost_mode = !user.conf.ghost_mode
            else
                user.conf.ghost_mode = true

            if (user.conf.ghost_mode)
                interaction.reply({ content: client.tls.phrase(user, "mode.oculto.ativo", 28), ephemeral: true })
            else
                interaction.reply({ content: client.tls.phrase(user, "mode.oculto.desativo", client.emoji(emojis.ghostbusters)), ephemeral: true })
        } else if (interaction.options.getSubcommand() === "ranking") {

            // Ativa ou desativa o modo fantasma e salva
            if (typeof user.conf.ranking !== "undefined")
                user.conf.ranking = !user.conf.ranking
            else
                user.conf.ranking = false

            if (user.conf.ranking)
                interaction.reply({ content: client.tls.phrase(user, "mode.ranking.ativo", 26), ephemeral: true })
            else
                interaction.reply({ content: client.tls.phrase(user, "mode.ranking.desativo", 27), ephemeral: true })
        } else if (interaction.options.getSubcommand() === "weather") {

            if (typeof user.misc.weather !== "undefined")
                user.misc.weather = !user.misc.weather
            else
                user.misc.weather = false

            if (user.misc.weather)
                interaction.reply({ content: client.tls.phrase(user, "mode.weather.ativo", 25), ephemeral: true })
            else
                interaction.reply({ content: client.tls.phrase(user, "mode.weather.desativo", 24), ephemeral: true })
        } else if (interaction.options.getSubcommand() === "tasks") {

            // Ativa ou desativa as tarefas globais
            if (typeof user.conf.global_tasks !== "undefined")
                user.conf.global_tasks = !user.conf.global_tasks
            else
                user.conf.global_tasks = false

            if (user.conf.global_tasks)
                interaction.reply({ content: client.tls.phrase(user, "mode.tasks.ativo", [client.defaultEmoji("paper"), 22]), ephemeral: true })
            else
                interaction.reply({ content: client.tls.phrase(user, "mode.tasks.desativo", [client.defaultEmoji("paper"), 23]), ephemeral: true })
        }

        await user.save()
    }
}