const { SlashCommandBuilder, EmbedBuilder } = require('discord.js')

const { emojis_dancantes } = require('../../arquivos/json/text/emojis.json')

module.exports = {
    data: new SlashCommandBuilder()
        .setName("pay")
        .setNameLocalizations({
            "pt-BR": 'dei-lhe',
            "es-ES": 'transferir',
            "fr": 'payer',
            "it": 'pagare',
            "ru": '–ø–ª–∞—Ç–∏—Ç—å'
        })
        .setDescription("‚å†üí∏‚å° Transfer Bufunfa to other users")
        .setDescriptionLocalizations({
            "pt-BR": '‚å†üí∏‚å° Transfira Bufunfa para outros usu√°rios',
            "es-ES": '‚å†üí∏‚å° Transferir Bufunfa a otros usuarios',
            "fr": '‚å†üí∏‚å° Transf√©rer Bufunfa √† d\'autres utilisateurs',
            "it": '‚å†üí∏‚å° Trasferisci Bufunfa ad altri utenti',
            "ru": '‚å†üí∏‚å° –î–µ–ª–∏—Ç—å—Å—è Bufunfa —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏'
        })
        .addUserOption(option =>
            option.setName("user")
                .setNameLocalizations({
                    "pt-BR": 'usuario',
                    "es-ES": 'usuario',
                    "it": 'utente',
                    "ru": '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                })
                .setDescription("The user who will receive")
                .setDescriptionLocalizations({
                    "pt-BR": 'O usu√°rio que receber√°',
                    "es-ES": 'El usuario que recibir√°',
                    "fr": 'L\'utilisateur qui recevra',
                    "it": 'L\'utente che ricever√†',
                    "ru": '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏—Ç'
                })
                .setRequired(true))
        .addNumberOption(option =>
            option.setName("amount")
                .setNameLocalizations({
                    "pt-BR": 'quantia',
                    "es-ES": 'monto',
                    "fr": 'montant',
                    "it": 'quantita',
                    "ru": '—Ü–µ–Ω–∏—Ç—å'
                })
                .setDescription("The amount that will be transferred")
                .setDescriptionLocalizations({
                    "pt-BR": 'A quantidade que ser√° transferida',
                    "es-ES": 'El monto a transferir',
                    "fr": 'Le montant √† transf√©rer',
                    "it": 'L\'importo da trasferire',
                    "ru": '–°—É–º–º–∞ –∫ –ø–µ—Ä–µ–≤–æ–¥—É'
                })
                .setRequired(true)),
    async execute(client, user, interaction) {

        let user_alvo = interaction.options.getUser("user")
        let bufunfas = interaction.options.data[1].value

        if (bufunfas < 0.01)
            return interaction.reply({ content: `:bank: :octagonal_sign: | ${client.tls.phrase(user, "misc.pay.error_2")}`, ephemeral: true })

        const alvo = await client.getUser(user_alvo.id)

        if (alvo.uid === user.uid)
            return interaction.reply({ content: `:bank: :octagonal_sign: | ${client.tls.phrase(user, "misc.pay.error_3")}`, ephemeral: true })

        // Validando se o usu√°rio marcado n√£o √© um bot
        const membro_sv = await client.getUserGuild(interaction, alvo.uid)

        if (membro_sv.user.bot && alvo.uid !== client.id())
            return interaction.reply({ content: `:bank: :octagonal_sign: | ${client.tls.phrase(user, "misc.pay.user_bot")}`, ephemeral: true })

        formata_num = (valor) => valor.toLocaleString("pt-BR", { minimunFractionDigits: 2 })

        if (user.misc.money < bufunfas) // Conferindo a quantidade de Bufunfas do pagador
            return interaction.reply({ content: `:bank: :octagonal_sign: | ${client.tls.phrase(user, "misc.pay.error").replace("valor_repl", client.locale(bufunfas))}`, ephemeral: true })

        const embed = new EmbedBuilder()
            .setTitle("> Nova transfer√™ncia")
            .setColor(client.embed_color(user.misc.color))
            .addFields(
                {
                    name: `**${client.defaultEmoji("money")} Transferindo**`,
                    value: `\`B$ ${formata_num(bufunfas)}\``,
                    inline: true
                },
                {
                    name: `**${client.defaultEmoji("person")} Destinat√°rio**`,
                    value: `<@${alvo.uid}>`,
                    inline: true
                }
            )
            .setFooter({ text: "Selecione a opera√ß√£o desejada nos bot√µes abaixo.", iconURL: interaction.user.avatarURL({ dynamic: true }) })

        // Criando os bot√µes para o menu de transfer√™ncias
        const row = client.create_buttons([{ name: `Confirmar:transfer.${alvo.uid}[${bufunfas}]`, value: '1', type: 2 }, { name: 'Cancelar:transfer', value: '0', type: 3 }], interaction)

        return interaction.reply({ embeds: [embed], components: [row], ephemeral: true })
    }
}