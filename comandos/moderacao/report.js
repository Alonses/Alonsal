const { SlashCommandBuilder, PermissionFlagsBits, EmbedBuilder } = require('discord.js')

const { getReport } = require('../../adm/database/schemas/Report')

module.exports = {
    data: new SlashCommandBuilder()
        .setName("report")
        .setDescription("Report users who cause problems")
        .addSubcommand(subcommand =>
            subcommand.setName("create")
                .setDescription("‚å†üíÇ‚å° Report users who cause problems")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üíÇ‚å° Denuncie usu√°rios que criam problemas',
                    "es-ES": '‚å†üíÇ‚å° Reportar usuarios que crean problemas',
                    "fr": '‚å†üíÇ‚å° Signaler les utilisateurs qui cr√©ent des probl√®mes',
                    "it": '‚å†üíÇ‚å° Segnala gli utenti che creano problemi',
                    "ru": '‚å†üíÇ‚å° –°–æ–æ–±—â–∞–π—Ç–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–∑–¥–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã'
                })
                .addStringOption(option =>
                    option.setName("reason")
                        .setNameLocalizations({
                            "pt-BR": 'motivo',
                            "es-ES": 'razon',
                            "fr": 'raison',
                            "it": 'motivo',
                            "ru": '–ø—Ä–∏—á–∏–Ω–∞'
                        })
                        .setDescription("Report what happened to this user")
                        .setDescriptionLocalizations({
                            "pt-BR": 'Relate o que aconteceu com este usu√°rio',
                            "es-ES": 'Reportar lo que le pas√≥ a este usuario',
                            "fr": 'Signaler ce qui est arriv√© √† cet utilisateur',
                            "it": 'Segnala cosa √® successo a questo utente',
                            "ru": '–°–æ–æ–±—â–∏—Ç—å –æ —Å–ª—É—á–∏–≤—à–µ–º—Å—è —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'
                        })
                        .setRequired(true))
                .addUserOption(option =>
                    option.setName("user")
                        .setNameLocalizations({
                            "pt-BR": 'usuario',
                            "es-ES": 'usuario',
                            "it": 'utente',
                            "ru": '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                        })
                        .setDescription("Mention a user as a target")
                        .setDescriptionLocalizations({
                            "pt-BR": 'Marque outro usu√°rio como alvo',
                            "es-ES": 'Mencionar a otro usuario',
                            "fr": 'Mentionner un utilisateur comme cible',
                            "it": 'Menziona un altro utente',
                            "ru": '–£–ø–æ–º—è–Ω—É—Ç—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                        }))
                .addStringOption(option =>
                    option.setName("id")
                        .setDescription("The user ID")
                        .setDescriptionLocalizations({
                            "pt-BR": 'O ID do usu√°rio',
                            "es-ES": 'Identificaci√≥n de usuario',
                            "fr": 'ID de l\'utilisateur',
                            "it": 'ID utente',
                            "ru": 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                        })))
        .addSubcommand(subcommand =>
            subcommand.setName("remove")
                .setDescription("‚å†üíÇ‚å° Remove the report on a user")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üíÇ‚å° Remova a den√∫ncia sobre um usu√°rio',
                    "es-ES": '‚å†üíÇ‚å° Remove a den√∫ncia sobre um usu√°rio',
                    "fr": '‚å†üíÇ‚å° Supprimer une den√∫ncia sobre um usu√°rio',
                    "it": '‚å†üíÇ‚å° Rimuovi una denuncia su un utente',
                    "ru": '‚å†üíÇ‚å° –£–¥–∞–ª–∏—Ç—å –∂–∞–ª–æ–±—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                })
                .addStringOption(option =>
                    option.setName("reason")
                        .setNameLocalizations({
                            "pt-BR": 'motivo',
                            "es-ES": 'razon',
                            "fr": 'raison',
                            "it": 'motivo',
                            "ru": '–ø—Ä–∏—á–∏–Ω–∞'
                        })
                        .setDescription("Report what happened to this user")
                        .setDescriptionLocalizations({
                            "pt-BR": 'Relate o que aconteceu com este usu√°rio',
                            "es-ES": 'Reportar lo que le pas√≥ a este usuario',
                            "fr": 'Signaler ce qui est arriv√© √† cet utilisateur',
                            "it": 'Segnala cosa √® successo a questo utente',
                            "ru": '–°–æ–æ–±—â–∏—Ç—å –æ —Å–ª—É—á–∏–≤—à–µ–º—Å—è —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'
                        })
                        .setRequired(true))
                .addUserOption(option =>
                    option.setName("user")
                        .setNameLocalizations({
                            "pt-BR": 'usuario',
                            "es-ES": 'usuario',
                            "it": 'utente',
                            "ru": '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                        })
                        .setDescription("Mention a user as a target")
                        .setDescriptionLocalizations({
                            "pt-BR": 'Marque outro usu√°rio como alvo',
                            "es-ES": 'Mencionar a otro usuario',
                            "fr": 'Mentionner un utilisateur comme cible',
                            "it": 'Menziona un altro utente',
                            "ru": '–£–ø–æ–º—è–Ω—É—Ç—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                        }))
                .addStringOption(option =>
                    option.setName("id")
                        .setDescription("The user ID")
                        .setDescriptionLocalizations({
                            "pt-BR": 'O ID do usu√°rio',
                            "es-ES": 'Identificaci√≥n de usuario',
                            "fr": 'ID de l\'utilisateur',
                            "it": 'ID utente',
                            "ru": 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                        })))

        .addSubcommand(subcommand =>
            subcommand.setName("migrate")
                .setDescription("‚å†üíÇ‚å° Migrate all banned users from server to alonsal")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üíÇ‚å° Migre todos os usu√°rios banidos do servidor para o alonsal',
                    "es-ES": '‚å†üíÇ‚å° Migrar todos los usuarios prohibidos del servidor a alonsal',
                    "fr": '‚å†üíÇ‚å° Migrer tous les utilisateurs bannis du serveur vers l\'alonsal',
                    "it": '‚å†üíÇ‚å° Migra tutti gli utenti bannati dal server ad alonsal',
                    "ru": '‚å†üíÇ‚å° –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤—Å–µ—Ö –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –∞–ª–æ–Ω—Å–∞–ª'
                })
        )
        .setDefaultMemberPermissions(PermissionFlagsBits.BanMembers || PermissionFlagsBits.KickMembers),
    async execute(client, user, interaction) {

        if (interaction.options.getSubcommand() !== "migrate") {

            let id_alvo = interaction.options.getUser("user") || null

            const valores = {
                id_alvo: interaction.options.getString("id"),
                report: interaction.options.getString("reason")
            }

            if (interaction.options.getUser("user"))
                id_alvo = id_alvo.id

            if (id_alvo === null)
                id_alvo = valores.id_alvo

            if (id_alvo === interaction.user.id)
                return client.tls.reply(interaction, user, "mode.report.auto_reporte", true, 0)

            if (id_alvo === null)
                return client.tls.reply(interaction, user, "mode.report.sem_usuario", true, 0)

            if (id_alvo === client.id())
                return client.tls.reply(interaction, user, "mode.report.reportar_bot", true, 0)

            const alvo = await getReport(id_alvo, interaction.guild.id)

            // Atribuindo o reporte ao usu√°rio que disparou o comadno
            alvo.issuer = interaction.user.id
            const date1 = new Date()

            if (interaction.options.getSubcommand() === "create") {

                alvo.archived = true
                alvo.relatory = valores.report
                alvo.timestamp = client.timestamp()

                // Enviando o embed para valida√ß√£o
                const embed = new EmbedBuilder()
                    .setTitle(client.tls.phrase(user, "mode.report.reportando", 7))
                    .addFields(
                        {
                            name: ":bust_in_silhouette: **Discord ID**",
                            value: `\`${alvo.uid}\`\n( <@${alvo.uid}> )`,
                            inline: true
                        },
                        {
                            name: `**${client.defaultEmoji("guard")} ${client.tls.phrase(user, "mode.report.reportador")}**`,
                            value: `\`${alvo.issuer}\`\n( <@${alvo.issuer}> )`,
                            inline: true
                        },
                        {
                            name: ":globe_with_meridians: **Server ID**",
                            value: `\`${alvo.sid}\`\n<t:${alvo.timestamp}:R>`,
                            inline: true
                        }
                    )
                    .setColor(0xED4245)
                    .setDescription(`\`\`\`üí¢ | ${alvo.relatory}\`\`\`\n${client.tls.phrase(user, "mode.report.descricao_report")}`)
                    .setFooter({ text: client.tls.phrase(user, "menu.botoes.selecionar_operacao"), iconURL: client.discord.user.avatarURL({ dynamic: true }) })

                // Salvando o alvo para editar posteriormente
                await alvo.save()

                // Criando os bot√µes para as fun√ß√µes de reporte
                const row = client.create_buttons([{ id: "report_user", name: client.tls.phrase(user, "menu.botoes.confirmar_anunciando"), value: '1', type: 2, emoji: 'üì£', data: `1|${alvo.uid}` }, { id: "report_user", name: client.tls.phrase(user, "menu.botoes.apenas_confirmar"), value: '0', type: 1, emoji: 'üì´', data: `2|${alvo.uid}` }, { id: "report_user", name: client.tls.phrase(user, "menu.botoes.cancelar"), value: '0', type: 3, emoji: 'üõë', data: `0|${alvo.uid}` }], interaction)

                return interaction.reply({ embeds: [embed], components: [row], ephemeral: true })

            } else if (interaction.options.getSubcommand() === "remove") { // Relatando que o usu√°rio teve uma atualiza√ß√£o
                alvo.archived = true
                alvo.relatory += `\n ${valores.report}`

                client.tls.reply(interaction, user, "mode.report.usuario_att", true, 4)
            }

            await alvo.save()

        } else { // Migrando todos os usu√°rios banidos do servidor para o reposit√≥rio do bot

            // Enviando o embed para valida√ß√£o
            const embed = new EmbedBuilder()
                .setTitle(client.tls.phrase(user, "mode.report.automatizado"))
                .setColor(0xED4245)
                .setDescription(client.tls.phrase(user, "mode.report.descricao_automatizado"))
                .setFooter({ text: client.tls.phrase(user, "menu.botoes.selecionar_operacao"), iconURL: client.discord.user.avatarURL({ dynamic: true }) })

            // Criando os bot√µes para a cor customizada
            const row = client.create_buttons([{ id: "report_auto", name: client.tls.phrase(user, "menu.botoes.confirmar"), value: '1', type: 2, emoji: '‚úÖ', data: 1 }, { id: "report_auto", name: client.tls.phrase(user, "menu.botoes.cancelar"), value: '0', type: 3, emoji: 'üõë', data: 0 }], interaction)

            return interaction.reply({ embeds: [embed], components: [row], ephemeral: true })
        }
    }
}