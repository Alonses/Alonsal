const { SlashCommandBuilder, PermissionFlagsBits } = require('discord.js')

const { getReport } = require('../../adm/database/schemas/Report')

module.exports = {
    data: new SlashCommandBuilder()
        .setName("report")
        .setDescription("Report users who cause problems")
        .addSubcommand(subcommand =>
            subcommand.setName("create")
                .setDescription("‚å†üíÇ‚å° Report users who cause problems")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üíÇ‚å° Denuncie usu√°rios que criam problemas',
                    "es-ES": '‚å†üíÇ‚å° Reportar usuarios que crean problemas',
                    "fr": '‚å†üíÇ‚å° Signaler les utilisateurs qui cr√©ent des probl√®mes',
                    "it": '‚å†üíÇ‚å° Segnala gli utenti che creano problemi',
                    "ru": '‚å†üíÇ‚å° –°–æ–æ–±—â–∞–π—Ç–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–∑–¥–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã'
                })
                .addStringOption(option =>
                    option.setName("reason")
                        .setNameLocalizations({
                            "pt-BR": 'motivo',
                            "es-ES": 'razon',
                            "fr": 'raison',
                            "it": 'motivo',
                            "ru": '–ø—Ä–∏—á–∏–Ω–∞'
                        })
                        .setDescription("Report what happened to this user")
                        .setDescriptionLocalizations({
                            "pt-BR": 'Relate o que aconteceu com este usu√°rio',
                            "es-ES": 'Reportar lo que le pas√≥ a este usuario',
                            "fr": 'Signaler ce qui est arriv√© √† cet utilisateur',
                            "it": 'Segnala cosa √® successo a questo utente',
                            "ru": '–°–æ–æ–±—â–∏—Ç—å –æ —Å–ª—É—á–∏–≤—à–µ–º—Å—è —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'
                        })
                        .setRequired(true))
                .addUserOption(option =>
                    option.setName("user")
                        .setNameLocalizations({
                            "pt-BR": 'usuario',
                            "es-ES": 'usuario',
                            "it": 'utente',
                            "ru": '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                        })
                        .setDescription("Mention a user as a target")
                        .setDescriptionLocalizations({
                            "pt-BR": 'Marque outro usu√°rio como alvo',
                            "es-ES": 'Mencionar a otro usuario',
                            "fr": 'Mentionner un utilisateur comme cible',
                            "it": 'Menziona un altro utente',
                            "ru": '–£–ø–æ–º—è–Ω—É—Ç—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                        }))
                .addStringOption(option =>
                    option.setName("id")
                        .setDescription("The user ID")
                        .setDescriptionLocalizations({
                            "pt-BR": 'O ID do usu√°rio',
                            "es-ES": 'Identificaci√≥n de usuario',
                            "fr": 'ID de l\'utilisateur',
                            "it": 'ID utente',
                            "ru": 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                        })))
        .addSubcommand(subcommand =>
            subcommand.setName("remove")
                .setDescription("‚å†üíÇ‚å° Remove the report on a user")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üíÇ‚å° Remova a den√∫ncia sobre um usu√°rio',
                    "es-ES": '‚å†üíÇ‚å° Remove a den√∫ncia sobre um usu√°rio',
                    "fr": '‚å†üíÇ‚å° Supprimer une den√∫ncia sobre um usu√°rio',
                    "it": '‚å†üíÇ‚å° Rimuovi una denuncia su un utente',
                    "ru": '‚å†üíÇ‚å° –£–¥–∞–ª–∏—Ç—å –∂–∞–ª–æ–±—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                })
                .addStringOption(option =>
                    option.setName("reason")
                        .setNameLocalizations({
                            "pt-BR": 'motivo',
                            "es-ES": 'razon',
                            "fr": 'raison',
                            "it": 'motivo',
                            "ru": '–ø—Ä–∏—á–∏–Ω–∞'
                        })
                        .setDescription("Report what happened to this user")
                        .setDescriptionLocalizations({
                            "pt-BR": 'Relate o que aconteceu com este usu√°rio',
                            "es-ES": 'Reportar lo que le pas√≥ a este usuario',
                            "fr": 'Signaler ce qui est arriv√© √† cet utilisateur',
                            "it": 'Segnala cosa √® successo a questo utente',
                            "ru": '–°–æ–æ–±—â–∏—Ç—å –æ —Å–ª—É—á–∏–≤—à–µ–º—Å—è —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'
                        })
                        .setRequired(true))
                .addUserOption(option =>
                    option.setName("user")
                        .setNameLocalizations({
                            "pt-BR": 'usuario',
                            "es-ES": 'usuario',
                            "it": 'utente',
                            "ru": '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                        })
                        .setDescription("Mention a user as a target")
                        .setDescriptionLocalizations({
                            "pt-BR": 'Marque outro usu√°rio como alvo',
                            "es-ES": 'Mencionar a otro usuario',
                            "fr": 'Mentionner un utilisateur comme cible',
                            "it": 'Menziona un altro utente',
                            "ru": '–£–ø–æ–º—è–Ω—É—Ç—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                        }))
                .addStringOption(option =>
                    option.setName("id")
                        .setDescription("The user ID")
                        .setDescriptionLocalizations({
                            "pt-BR": 'O ID do usu√°rio',
                            "es-ES": 'Identificaci√≥n de usuario',
                            "fr": 'ID de l\'utilisateur',
                            "it": 'ID utente',
                            "ru": 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                        })))
        .setDefaultMemberPermissions(PermissionFlagsBits.BanMembers || PermissionFlagsBits.KickMembers),
    async execute(client, user, interaction) {

        let id_alvo = interaction.options.getUser("user") || null
        let entradas = interaction.options.data[0].options

        const valores = {
            id_alvo: null,
            report: null
        }

        // Coletando todas as entradas
        entradas.forEach(valor => {

            if (valor.name === "id")
                valores.id_alvo = valor.value

            if (valor.name === "reason")
                valores.report = valor.value
        })

        if (interaction.options.getUser("user"))
            id_alvo = id_alvo.id

        if (id_alvo === null)
            id_alvo = valores.id_alvo

        if (id_alvo === null)
            return client.tls.reply(interaction, user, "mode.report.sem_usuario", true, 0)

        // Verificando se o usu√°rio faz parte do servidor
        let dados_alvo = await interaction.guild.members.fetch(id_alvo) || null

        if (!dados_alvo)
            return interaction.reply({ content: ":mag: | Este usu√°rio n√£o faz parte desse servidor.", ephemeral: true })

        const alvo = await getReport(id_alvo, interaction.guild.id)
        const date1 = new Date()

        if (interaction.options.getSubcommand() === "create") {

            alvo.archived = false
            alvo.relatory = valores.report
            alvo.timestamp = Math.floor(date1.getTime() / 1000)

            client.tls.reply(interaction, user, "mode.report.usuario_add", true, 4)

            require('../../adm/automaticos/dispara_reporte')({ client, alvo, dados_alvo })
        } else { // Relatando que o usu√°rio teve uma atualiza√ß√£o
            alvo.archived = true
            alvo.relatory += `\n ${valores.report}`

            client.tls.reply(interaction, user, "mode.report.usuario_att", true, 4)
        }

        await alvo.save()
    }
}