const { SlashCommandBuilder } = require('discord.js')

module.exports = {
    data: new SlashCommandBuilder()
        .setName("text")
        .setNameLocalizations({
            "pt-BR": 'texto',
            "es-ES": 'texto',
            "fr": 'texte',
            "it": 'testo',
            "ru": '—Ç–µ–∫—Å—Ç'
        })
        .setDescription("text operations")
        .addSubcommand(subcommand =>
            subcommand.setName("reverse")
                .setDescription("‚å†üòÇ‚å° (Un)invert characters!")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üòÇ‚å° (Des)inverta caracteres!',
                    "es-ES": '‚å†üòÇ‚å° (Des)invertir caracteres!',
                    "fr": '‚å†üòÇ‚å° (D√©)inverser les caract√®res!',
                    "it": '‚å†üòÇ‚å° (Dis)invertire il testo!',
                    "ru": '‚å†üòÇ‚å° –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —Ç–µ–∫—Å—Ç!'
                })
                .addStringOption(option =>
                    option.setName("text")
                        .setNameLocalizations({
                            "pt-BR": 'texto',
                            "es-ES": 'texto',
                            "fr": 'texte',
                            "it": 'testo',
                            "ru": '—Ç–µ–∫—Å—Ç'
                        })
                        .setDescription("The text to be inverted")
                        .setDescriptionLocalizations({
                            "pt-BR": 'O texto a ser invertido',
                            "es-ES": 'El texto a invertir',
                            "fr": 'Le texte √† revenir',
                            "it": 'Il testo da invertire',
                            "ru": '–¢–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å'
                        })
                        .setRequired(true)))
        .addSubcommand(subcommand =>
            subcommand.setName("upper")
                .setDescription("‚å†üòÇ‚å° W R I T E  L I K E  T H A T  Q U I C K L Y")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üòÇ‚å° E S C R E V A  A S S I M  R A P I D A M E N T E',
                    "es-ES": '‚å†üòÇ‚å° E S C R I B E  A S I  R A P I D O',
                    "fr": '‚å†üòÇ‚å° √â C R I S  V I T E  C O M M E  √á A',
                    "it": '‚å†üòÇ‚å° S C R I V I  V E L O C E M E N T E  C O N  Q U E S T O  S T I L E',
                    "ru": '‚å†üòÇ‚å° –ü –ò –® –ò  –¢ –ê –ö  –ë –´ –° –¢ –† –û'
                })
                .addStringOption(option =>
                    option.setName("text")
                        .setNameLocalizations({
                            "pt-BR": 'texto',
                            "es-ES": 'texto',
                            "fr": 'texte',
                            "it": 'testo',
                            "ru": '—Ç–µ–∫—Å—Ç'
                        })
                        .setDescription("Write something!")
                        .setDescriptionLocalizations({
                            "pt-BR": 'Escreva algo!',
                            "es-ES": '¬°Escribe algo!',
                            "fr": '√âcris quelque chose!',
                            "it": 'Scrivi qualcosa!',
                            "ru": '–ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å!'
                        })
                        .setRequired(true)))
        .addSubcommand(subcommand =>
            subcommand.setName("sans")
                .setDescription("‚å†üòÇ‚å° WrItE LiKe tHaT QuIcKlY")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üòÇ‚å° EsCrEvA DeSsA FoRmA RaPid√Éo',
                    "es-ES": '‚å†üòÇ‚å° EsCrIbE AsI MuY RaPiDo',
                    "fr": '‚å†üòÇ‚å° √âcRiVeZ CoMmE CeCi rApIdEmEnT',
                    "it": '‚å†üòÇ‚å° ScRiVi vElOcEmEnTe cOn qUeStO StIlE',
                    "ru": '‚å†üòÇ‚å° –ü–∏–®–∏ —Ç–ê–∫ –±–´—Å–¢—Ä–û'
                })
                .addStringOption(option =>
                    option.setName("text")
                        .setNameLocalizations({
                            "pt-BR": 'texto',
                            "es-ES": 'texto',
                            "fr": 'texte',
                            "it": 'testo',
                            "ru": '—Ç–µ–∫—Å—Ç'
                        })
                        .setDescription("Write something!")
                        .setDescriptionLocalizations({
                            "pt-BR": 'Escreva algo!',
                            "es-ES": '¬°Escribe algo!',
                            "fr": '√âcris quelque chose!',
                            "it": 'Scrivi qualcosa!',
                            "ru": '–ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å!'
                        })
                        .setRequired(true)))
        .addSubcommand(subcommand =>
            subcommand.setName("emoji")
                .setDescription("‚å†üòÇ‚å° Writeü•∂somethingü•∂withü•∂emojis")
                .setDescriptionLocalizations({
                    "pt-BR": '‚å†üòÇ‚å° Escrevaü•∂algoü•∂comü•∂emojis',
                    "es-ES": '‚å†üòÇ‚å° Escribeü•∂algoü•∂conü•∂emojis',
                    "fr": '‚å†üòÇ‚å° √âcrivezü•∂quelqueü•∂choseü•∂avecü•∂emojis',
                    "it": '‚å†üòÇ‚å° Scriviü•∂qualcosaü•∂conü•∂emoji',
                    "ru": '‚å†üòÇ‚å° –ù–∞–ø–∏—à–∏—Ç–µü•∂—á—Ç–æ-–Ω–∏–±—É–¥—åü•∂—Åü•∂—Å–º–∞–π–ª–∏–∫–∞–º–∏'
                })
                .addStringOption(option =>
                    option.setName("text")
                        .setNameLocalizations({
                            "pt-BR": 'texto',
                            "es-ES": 'texto',
                            "fr": 'texte',
                            "it": 'testo',
                            "ru": '—Ç–µ–∫—Å—Ç'
                        })
                        .setDescription("Write something!")
                        .setDescriptionLocalizations({
                            "pt-BR": 'Escreva algo!',
                            "es-ES": '¬°Escribe algo!',
                            "fr": '√âcris quelque chose!',
                            "it": 'Scrivi qualcosa!',
                            "ru": '–ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å!'
                        })
                        .setRequired(true))
                .addStringOption(option =>
                    option.setName("emoji")
                        .setNameLocalizations({
                            "ru": '—ç–º–æ–¥–∑–∏'
                        })
                        .setDescription("Choose one!")
                        .setDescriptionLocalizations({
                            "pt-BR": 'Escolha algo!',
                            "es-ES": '¬°Escoge uno!',
                            "fr": 'Choisissez-en un!',
                            "it": 'Scegline uno!',
                            "ru": '–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω!'
                        })
                        .setRequired(true))),
    async execute(client, user, interaction) {

        let texto_entrada = interaction.options.data[0].options[0].value
        const operation = interaction.options.getSubcommand()

        // Inverte o texto enviado
        if (operation === "reverse") {
            interaction.reply({ content: texto_entrada.split('').reverse().join(""), ephemeral: user?.conf.ghost_mode || false })

            // Torna o texto nesse formato "A A A A A A"
        } else if (operation === "upper") {

            interaction.reply({ content: texto_entrada.toUpperCase().split('').join(" ").trim(), ephemeral: user?.conf.ghost_mode || false })

            // Torna o texto nesse formato "AaAaAaAaAaA"
        } else if (operation === "sans") {

            texto_entrada = texto_entrada.split("")

            for (let i = 0; i < texto_entrada.length; i++)
                if (i % 2 === 0 && i % 1 === 0)
                    texto_entrada[i] = texto_entrada[i].toLocaleUpperCase()
                else
                    texto_entrada[i] = texto_entrada[i].toLocaleLowerCase()

            interaction.reply({ content: texto_entrada.join(""), ephemeral: user?.conf.ghost_mode || false })

            // Torna o texto nesse formato "testeüòÇtestadoüòÇtestadamente"
        } else if (operation === "emoji") {

            let emoji = interaction.options.data[0].options[1].value

            // Emoji customizado
            if (emoji.startsWith("<") && emoji.endsWith(">")) {
                const id = emoji.match(/\d{15,}/g)[0]

                emoji = client.emoji(id)

                return interaction.reply({ content: texto_entrada.replaceAll(" ", emoji), ephemeral: user?.conf.ghost_mode || false })
            }

            // Emoji padr√£o do discord
            interaction.reply({ content: texto_entrada.replaceAll(" ", emoji), ephemeral: user?.conf.ghost_mode || false })
        }
    }
}